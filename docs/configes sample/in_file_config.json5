{
  Game_threads: {
    orbit_demo: {
      ship_info: {
        mass: 'basic_config:basic_number',
        force: 'basic_config:basic_force'
      }
    }
  },
  client: {
    'self.view': [
      'space',
      'map',
      'menu',
      'build'
    ],
    'self.textures': {
      'first name of textures(defaut: difficult_rocket)': {
        'name of image or name of list': 'pyglet.image class or dict',
        /*
        这里说明一下，你即可以直接主列表下直接放image，也可以再细分
        会直接检测是列表还是image
        另外 可 在文件夹同级放image文件
        */
        nothing: 'nothing'
      }
    },
    'self.parts': {
      'ship name': {
        brain: [
          'part type',
          // part type
          'turn',
          // type:float
          'is mirror',
          // type:bool
          [
            'basic_config.basic_poi',
            'basic_config.basic_poi'
          ]
          /*brain的坐标记录由两部分组成
          第一部分是brain所在区块的区块坐标(区块的大小暂定2^64m大小，从恒星中心开始算，普通的平面直角坐标系)
          第二部分是brain所在区块内的相对坐标(左上角00)*/
          /*rua！ 我用中文了！
          飞船的'大脑'（直译）没有'特殊值'
          也就是说'大脑'只是一个'壳'(服务端同理)
          只会计算位置、方向之类的统一数据
          需要改的话发issue 嘿嘿
          */
        ],
        'part ID': [
          // part id
          'part type',
          // part type
          'turn',
          // type:float  0 is up clockwise
          'is mirror',
          // type:bool
          [
            'basic_config.basic_poi'
          ],
          {
            'special value 1': 'xxx',
            'special value 2': 'xxx',
            /*继续继续
            这里的“特殊值”指的是
            除去上面写的类型、角度、镜像、位置之外的其他属性
            比如燃料罐的燃料量、太阳能板的打开状态
            需要渲染一些特殊项的时候
            比如对接之后传输燃料、渲染太阳能板
            的时候可以用到
            */
            nothing: 'nothing'
          }
        ]
      }
    }
  }
}
